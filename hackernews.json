[
{"title": "I want to be a Journey Programmer Again", "content": "Jun 15 2025 \r\n      I've recently noticed a fundamental shift in how I've been programming personal projects. Like many people I've become more reliant on LLM tools as time has passed. On the first release of ChatGPT, I thought it was cool how language models could write code, and could be used to both teach me and help me debug stuff. However, I now more frequently turn to them to write not only boilerplate but more meaningfully complex code, and am spending less time learning neat concepts. I wouldn't say my ability to write good code has diminished, but the energy I have to put my brain power into a problem has decreased, given how easy it is to use these tools.\r\n     \r\n      Not to be mistaken here for someone hating on LLMs. I think they are an amazing tool for both learning and writing code, despite it's flaws. If someone finds that LLMs help supercharge their productivity then I think that's cool, but I can't help but feel its taking something away from me, and I'm loosing that "},
{"title": "Studio Ghibli marks 40 years, but future looks uncertain", "content": "Subscribe Japan's Studio Ghibli turns 40 this month with two Oscars and legions of fans young and old won over by its complex plots and fantastical hand-drawn animation. But the future is uncertain, with latest hit   likely \u2014 but not certainly \u2014 the final feature from celebrated co-founder Hayao Miyazaki, now 84. In March, the   in Studio Ghibli's distinctively nostalgic style after the release of OpenAI's newest image generator \u2014 raising questions over copyright. The studio behind the Oscar-winning \"Spirited Away\" has become a cultural phenomenon since Miyazaki and the late Isao Takahata \u2014 he passed away in 2018 \u2014 established it in 1985. Its popularity has been fueled of late by a second Academy Award in 2024 for \"The Boy and the Heron,\" starring Robert Pattinson, and by Netflix streaming Ghibli movies around the world. In a time of both misinformation and too much information,  quality journalism is more crucial than ever. By subscribing, you can help us get the story right. With you"},
{"title": "Q-learning is not yet scalable", "content": "Over the past few years,\n                we've seen that next-token prediction scales, denoising diffusion scales, contrastive learning scales,\n                and so on, all the way to the point where we can train models with billions of parameters\n                with a   objective that can eat up as much data as we can throw at it.\n                Then, what about reinforcement learning (RL)?\n                 \n             \n                Apparently, it does.\n                In 2016, RL achieved superhuman-level performance in games like Go and Chess.\n                Now, RL is solving complex reasoning tasks in math and coding with large language models (LLMs).\n                This is great. However, there is one important caveat:\n                most of the current real-world successes of RL have been achieved with   algorithms\n                ( , REINFORCE, PPO, GRPO, etc.),\n                which   require fresh, newly sampled rollouts from the current policy,\n                an"},
{"title": "Grandson of John Tyler, 10th President of the US, Died Last Month at Age 96", "content": ""},
{"title": "I have reimplemented Stable Diffusion 3.5 from scratch in pure PyTorch", "content": "We read every piece of feedback, and take your input very seriously. \n            To see all available qualifiers, see our  .\n           \n        A reimplementation of Stable Diffusion 3.5 in pure PyTorch\n                There was an error while loading.  . miniDiffusion is a reimplementation of the Stable Diffusion 3.5 model in pure PyTorch with minimal dependencies. It's designed for educational, experimenting, and hacking purposes.\nIt's made with the mindset of having the least amount of code necessary to recreate Stable Diffusion 3.5 from scratch, with only ~2800 spanning from VAE to DiT to the Train and Dataset scripts.  The main Stable Diffusion model code is located in dit.py, dit_components.py, and attention.py. The dit.py file contains the main model, dit_components.py contains the embedding, normalization, patch embedding, and help functions for the DiT code, and attention.py contains the Joint Attention implementation.\nThe noise.py is where the Euler Scheduler is located for"},
{"title": "CI/CD Observability with OpenTelemetry Step by Step Guide", "content": "In the fast-paced world of CI/CD, understanding the performance and behaviour of your pipelines is crucial. GitHub Actions has become a popular choice for automating builds and deployments, but anyone who's debugged a flaky workflow or long-running job knows how challenging it can be to get visibility into what's happening under the hood. We usually rely on build logs, timing data, or guesswork when something goes wrong.   This is where OpenTelemetry comes into play.  is an open-source observability framework that enables collecting traces, metrics, and logs in a standard, vendor-agnostic way. With a bit of configuration, OTel can capture telemetry from even our CI/CD pipelines. In this guide, we'll walk through setting up OpenTelemetry for GitHub Actions [covering both tracing and metrics], with practical examples and configuration snippets. Just as we use traces and metrics to understand microservices and applications, we can apply the same to CI/CD pipelines. Instrumenting GitHub Ac"},
{"title": "Show HN: Container-compose \u2013 A Docker-compose like tool for Apple containers", "content": "We read every piece of feedback, and take your input very seriously. \n            To see all available qualifiers, see our  .\n           \n        A docker-compose like tool for Apple Containers\n                There was an error while loading.  . A CLI to let you use the Apple   like a  \nconfig file. Warning This tool is on \"alpha\" mode, which means that you can find a lot of bugs or missing features.\nIf you find anything, feel free to open an issue. Thank you! :) We have made a   containing the binary available on the release page.\nIf you prefer to have your binary from there. \n        A docker-compose like tool for Apple Containers\n                There was an error while loading.  .          There was an error while loading.  ."},
{"title": "The Art of Lisp and Writing (2003)", "content": "\u0096Charles Darwin Lisp is the language of loveliness. With it a great programmer can make a beautiful, operating thing, a thing organically created and formed through the interaction of a programmer/artist and a medium of expression that happens to execute on a computer. Taught that programming\u0097or the worse \"developing software\"\u0097is like a routine engineering activity, many find difficulty seeing writing as a model or even a metaphor for programming. Writing is creative, it is self-expression, it is art, which is to say it isn't a science and unlike science and engineering, it isn't a serious activity. Judgments like this, though, are easiest made by people who don't seriously engage in making both science and art. Art, engineering, and science are\u0097in that order\u0097part of a continuum of finding truth in the world and about ourselves. Artists make things and have always done so, gathering knowledge. There is sometimes no other purpose for what artists make than the need to embody an artistic"},
{"title": "Foundations of Computer Vision", "content": ",\n                 , and\n                 \n             The print version was published by Cambridge, Massachusetts London, England Dedicated to all the pixels. This book covers foundational topics within computer vision, with an image processing and machine learning perspective. We want to build the reader\u2019s intuition and so we include many visualizations. The audience is undergraduate and graduate students who are entering the field, but we hope experienced practitioners will find the book valuable as well. Our initial goal was to write a large book that provided a good coverage of the field. Unfortunately, the field of computer vision is just too large for that. So, we decided to write a small book instead, limiting each chapter to no more than five pages. Such a goal forced us to really focus on the important concepts necessary to understand each topic. Writing a short book was perfect because we did not have time to write a long book and you did not have time to read it. Unfortuna"},
{"title": "The experience continues until you stop experiencing it", "content": ". His father, Dr. Mikhail Popov, was a respected computer scientist at the   of the National Academy of Sciences (NAS) of Ukraine, working on early artificial intelligence systems and cybernetic theory. His mother, Lyudmila Popova (n\u00e9e Kovalenko), was a prominent actress with the Lesya Ukrainka National Academic Theater. This dual heritage of cutting-edge technology and theatrical performance would profoundly shape his artistic vision. As a child, frequently accompanies his father to the Glushkov Institute, where he is exposed to the   and other early Soviet computers. Institute colleagues recall a precocious boy who would ask sophisticated questions about machine logic and human-computer interaction. At home, his mother trains him in voice, movement, and dramatic presentation, treating their apartment as an informal theater studio. Attends the specialized  , showing remarkable aptitude for both programming and electronics. Creates his first rudimentary interactive experience at age 14"},
{"title": "How easy is it for a developer to \"sandbox\" a program?", "content": "In 2025, how easy is it for a developer to sandbox their program?\n\t\t\t \n\t\t\t\t , in this case, is when a developer limits\n\t\t\t\tavailable system resources to a program from within its source code.\n\t\t\t\tA simple example is calling\n\t\t\t\t  to change the\n\t\t\t\troot file-system to an empty directory so that the program cannot\n\t\t\t\tscribble into the root file-system.\n\t\t\t \n\t\t\t\tOperating systems have come a long way since  ,\n\t\t\t\tand allow developers to limit resources far beyond just the\n\t\t\t\tfile-system root.  In this article, I'll survey the tools for\n\t\t\t\tsandboxing on modern Unix systems:\n\t\t\t \n\t\t\t\tSo in 2025, how can we limit a program to only already-open file\n\t\t\t\tdescriptors (e.g., standard IO) and memory management\u2014regular\n\t\t\t\tconsole activities\u2014using these tools?  If the running program\n\t\t\t\ttries to do anything else, it must be terminated or otherwise unable\n\t\t\t\tto acquire the requested resources (files, sockets, shared memory,\n\t\t\t\tetc.).  By way of example:\n\t\t\t \n\t\t\t\tBelow is a table of sandbox to"},
{"title": "Text-to-LoRA: Hypernetwork that generates task-specific LLM adapters (LoRAs)", "content": "We read every piece of feedback, and take your input very seriously. \n            To see all available qualifiers, see our  .\n           \n        Hypernetworks that adapt LLMs for specific benchmark tasks using only textual task description as the input\n                There was an error while loading.  . Install   if you don't have   (see  ) With   installed, run the following to install the dependencies.         This demo runs   locally alongside a T2L model. This script allows us to generate a LoRA based on a task description. Running for the first time would take longer as the base model will be downloaded and cached. We can evaluate the generated LoRA by using the path printed at the end of the above script. Even with random descriptions, SFT-trained T2L still generates reasonable LoRAs.\nThis result with SFT-trained T2L differs from Table 5 in the paper that uses reconstruction-trained T2L.\nNonetheless, comparing the results obtained between aligned and unaligned descriptions, ali"},
{"title": "Tiny-diffusion: A minimal implementation of probabilistic diffusion models", "content": "We read every piece of feedback, and take your input very seriously. \n            To see all available qualifiers, see our  .\n           \n        A minimal PyTorch implementation of probabilistic diffusion models for 2D datasets.\n                There was an error while loading.  . A minimal PyTorch implementation of probabilistic diffusion models for 2D datasets. Get started by running   to explore the available options for training. A visualization of the forward diffusion process being applied to a dataset of one thousand 2D points. Note that the dinosaur is not a single training example, it represents each 2D point in the dataset. This illustration shows how the reverse process recovers the distribution of the training data. I have run a series of ablations experiments on hyperparameters, such as learning rate and model size, and visualized the learning process. The columns in the graphs represent the checkpoint epoch, and the rows indicate the hyperparameter values. Each cell disp"},
{"title": "Show HN: Tikt.com \u2013 Remove the \"OK\" from TikTok URL's to Download as MP3 or MP4", "content": "* Tikt.com allows you to download videos, images, and collections from   hosting site. It\u2019s super simple: just delete the \u201cok\u201d from tiktok.com so it becomes tikt.com, then press Enter to start the download. Alternatively, add tikt.com/ before any media URL to start saving content, like this: or you can paste any image URL into the search bar Tikt.com supports a wide range of image and video gallery platforms, excluding those with DRM protection. Enjoy generous access limits with minimal restrictions. To unlock features like bulk downloads, simply  . Developers are welcome to explore our powerful  . Scroll below to find step-by-step guides for each supported platform. Just remove \u201cok\u201d from tiktok.com so it becomes tikt.com \u2014 or simply add tikt.com/ before any TikTok link and press Enter to download. Visit TikTok or any supported gallery site, locate the content you want to save, and copy its URL. Paste the link into the input field at the top of this page. Click the download button to s"},
{"title": "Infinite Grid of Resistors", "content": "There is a well-known puzzle based on the premise of an\n  \u201cinfinite\u201d grid of resistors connecting adjacent nodes of a square lattice. A\n  small portion of such a grid is illustrated below. \u00a0 \u00a0 Between every pair of adjacent nodes is a resistance R,\n  and we\u2019re told that this grid of resistors extends \u201cto infinity\u201d in all\n  direction, and we\u2019re asked to determine the effective resistance between two\n  adjacent nodes, or, more generally, between any two specified nodes of the\n  lattice. \u00a0 For adjacent nodes, the usual solution of this puzzle is\n  to consider the current flow field as the sum of two components, one being\n  the flow field of a grid with current injected into a single node, and the\n  other being the flow field of a grid with current extracted from a single\n  (adjacent) node. The symmetry of the two individual cases then enables us to\n  infer the flow rates through the immediately adjacent resistors, and hence we\n  can conclude (as explained in more detail below) that the ef"},
{"title": "Show HN: I'm a student built an AI to chat with YouTube videos", "content": "(()=>{let e=[\"data-joy-color-scheme\",\"data-mui-color-scheme\",\"data-theme\",\"data-color-scheme\",\"class\"],r=e=>e.includes(\"dark\")?\"dark\":e.includes(\"light\")?\"light\":null,a=e=>{let r=document.getElementById(\"--stack-theme-mode\");r||((r=document.createElement(\"style\")).id=\"--stack-theme-mode\",r.innerHTML=\"/* This tag is used by Stack Auth to set the theme in the browser without causing a hydration error (since React ignores additional tags in the <head>). We later use the `html:has(head > [data-stack-theme=XYZ])` selector to apply styles based on the theme. */\",document.head.appendChild(r)),r.setAttribute(\"data-stack-theme\",e)},n=e=>{let r=document.createElement(\"div\");r.style.color=e,document.body.appendChild(r);let a=getComputedStyle(r).color;document.body.removeChild(r);let n=a.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);return n?[parseInt(n[1]),parseInt(n[2]),parseInt(n[3])]:null},o=e=>(299*e[0]+587*e[1]+114*e[2])/1e3,i=()=>{let e=getComputedStyle(document.documentElement).getPropertyValu"},
{"title": "Datalog in miniKanren", "content": "A browser with Wasm GC and tail call support is required for\n      this demo.  We recommend using either Mozilla Firefox or Google\n      Chrome.\n     Having access to an embedded logical programming language makes some tasks really easy.\n       One prerequisite for RealTalk is some form of Datalog, and I built one in Scheme using miniKanren so that I had access to all of the internals.\n       This page explains the naive Datalog implementation I did before modifying some of it to fit my version of Dynamicland. As a typical example we can look at a directed graph with five vertices labeled a through e.\n    Using Datalog, we introduce these vertices as separate records, establish facts about directed edges between them, and then introduce rules about what it means for a vertex to be reachable from another vertex.\n    In the end we manually trigger fixpoint analysis and run a query against the resulting database of initial and derived facts. This is roughly the syntax that I want to go fo"},
{"title": "Childhood leukemia: how a deadly cancer became treatable", "content": "HPV vaccines offer a rare opportunity to effectively eliminate one type of cancer. By taking this opportunity, it\u2019s possible to save hundreds of thousands of women each\u00a0year. Measles once killed millions every year. Vaccines changed this, preventing disease, long-term immune damage, and deadly outbreaks. It is wrong to think these three statements contradict each other. We need to see that they are all true to see that a better world is possible. Our articles and data visualizations rely on work from many different people and organizations. When citing this article, please also cite the underlying data sources. This article can be cited as: BibTeX citation All visualizations, data, and code produced by Our World in Data are completely open access under the  . You have the permission to use, distribute, and reproduce these in any medium, provided the source and authors are credited. The data produced by third parties and made available by Our World in Data is subject to the license term"},
{"title": "Datalog in Rust", "content": "We read every piece of feedback, and take your input very seriously. \n            To see all available qualifiers, see our  .\n                    There was an error while loading.  ."},
{"title": "Canyon.mid", "content": ""},
{"title": "The Skyscraper That Could Have Toppled over in the Wind (1995)", "content": "On a warm June day in 1978, William J. LeMessurier, one of the nation\u2019s leading structural engineers, received a phone call at his headquarters, in Cambridge, Massachusetts, from an engineering student in New Jersey. The young man, whose name has been lost in the swirl of subsequent events, said that his professor had assigned him to write a paper on the Citicorp tower, the slash-topped silver skyscraper that had become, on its completion in Manhattan the year before, the seventh-tallest building in the world. LeMessurier found the subject hard to resist, even though the call caught him in the middle of a meeting. As a structural consultant to the architect Hugh Stubbins, Jr., he had designed the twenty-five-thousand-ton steel skeleton beneath the tower\u2019s sleek aluminum skin. And, in a field where architects usually get all the credit, the engineer, then fifty-two, had won his own share of praise for the tower\u2019s technical elegance and singular grace; indeed, earlier that year he had be"},
